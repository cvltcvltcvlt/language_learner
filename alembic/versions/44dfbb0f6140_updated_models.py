"""updated models

Revision ID: 44dfbb0f6140
Revises: dd0aae2766cc
Create Date: 2025-04-13 17:46:48.171086

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '44dfbb0f6140'
down_revision: Union[str, None] = 'dd0aae2766cc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('permissions', sa.Text(), nullable=True),
    sa.Column('level', sa.Enum('ADMIN', 'SUPER_ADMIN', name='adminlevel'), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('material',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content_type', sa.Enum('VIDEO', 'ARTICLE', 'PDF', 'OTHER', name='materialtype'), nullable=False),
    sa.Column('content_url', sa.Text(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_material_id'), 'material', ['id'], unique=False)
    op.create_index(op.f('ix_material_title'), 'material', ['title'], unique=True)
    op.create_table('word',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('word', sa.String(), nullable=False),
    sa.Column('translation', sa.String(), nullable=False),
    sa.Column('language_level', sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', name='languagelevel'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_word_id'), 'word', ['id'], unique=False)
    op.create_index(op.f('ix_word_word'), 'word', ['word'], unique=False)
    op.drop_index('ix_words_id', table_name='words')
    op.drop_index('ix_words_word', table_name='words')
    op.drop_table('words')
    op.alter_column('exercise', 'lesson_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('exercise', 'question',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('exercise', 'correct_answer',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('lesson', sa.Column('theory', sa.Text(), nullable=True))
    op.add_column('lesson', sa.Column('words_to_learn', sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', name='languagelevel'), nullable=True))
    op.alter_column('lesson', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('lesson', 'lesson_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('lesson', 'teacher_id')
    op.execute('ALTER TABLE "user" ALTER COLUMN language_level TYPE languagelevel USING language_level::languagelevel')
    op.drop_column('user', 'role')
    op.alter_column('user_lesson_progress', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_lesson_progress', 'lesson_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_lesson_progress', 'lesson_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_lesson_progress', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('user', sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('user', 'language_level',
               existing_type=sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', name='languagelevel'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.add_column('lesson', sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.alter_column('lesson', 'lesson_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('lesson', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('lesson', 'words_to_learn')
    op.drop_column('lesson', 'theory')
    op.alter_column('exercise', 'correct_answer',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('exercise', 'question',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('exercise', 'lesson_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('words',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('word', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('translation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('language_level', postgresql.ENUM('A1', 'A2', 'B1', 'B2', 'C1', 'C2', name='languagelevel'), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='words_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='words_pkey')
    )
    op.create_index('ix_words_word', 'words', ['word'], unique=False)
    op.create_index('ix_words_id', 'words', ['id'], unique=False)
    op.drop_index(op.f('ix_word_word'), table_name='word')
    op.drop_index(op.f('ix_word_id'), table_name='word')
    op.drop_table('word')
    op.drop_index(op.f('ix_material_title'), table_name='material')
    op.drop_index(op.f('ix_material_id'), table_name='material')
    op.drop_table('material')
    op.drop_table('admin')
    # ### end Alembic commands ###
