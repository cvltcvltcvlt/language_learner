from aiohttp import web
import aiohttp

ai_routes = web.RouteTableDef()

@ai_routes.post("/ai_chat")
async def ai_chat_handler(request):
    data = await request.json()
    message = data.get("message")
    if not message:
        return web.json_response({"error": "Message is required"}, status=400)

    payload = {
          "model": "mistral:instruct",
          "messages": [
            {
              "role": "system",
              "content": "–í–∏ –¥—Ä—É–∂–Ω—ñ–π, —Ä–æ–∑–º–æ–≤–Ω–∏–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏, —è–∫–∏–π –ø—ñ–¥—Ç—Ä–∏–º—É—î –∫–æ—Ä–æ—Ç–∫—ñ –¥—ñ–∞–ª–æ–≥–∏ —Ä—ñ–¥–Ω–æ—é –º–æ–≤–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –ø–æ—Å—Ç—É–ø–æ–≤–æ —Å–ø—Ä—è–º–æ–≤—É—î —ó—Ö –¥–æ –ø—Ä–∞–∫—Ç–∏–∫–∏ –π –≤–∏–≤—á–µ–Ω–Ω—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó. –§–æ—Ä–º–∞—Ç—É–π—Ç–µ –∫–æ–∂–µ–Ω —É—Ä–æ–∫ –≤ HTML, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ç–∞–∫—ñ —Ä–æ–∑–¥—ñ–ª–∏:\n\n<h2>üéØ –°–ª–æ–≤–Ω–∏–∫</h2>\n<table>\n  <thead><tr><th>–°–ª–æ–≤–æ/–§—Ä–∞–∑–∞</th><th>–ü–µ—Ä–µ–∫–ª–∞–¥</th><th>–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—è</th></tr></thead>\n  <tbody>\n    <!-- rows here -->\n  </tbody>\n</table>\n\n<h2>üí¨ –ü—Ä–∏–∫–ª–∞–¥–∏</h2>\n<blockquote>\n  <!-- example sentences here -->\n</blockquote>\n\n<h2>‚úèÔ∏è –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –≤–ø—Ä–∞–≤–∏</h2>\n<ol>\n  <li><code><!-- exercise a --></code></li>\n  <li><code><!-- exercise b --></code></li>\n</ol>\n\n<h2>üëç –ü–æ—Ä–∞–¥–∏ —Ç–∞ –º–æ—Ç–∏–≤–∞—Ü—ñ—è</h2>\n<ul>\n  <li><!-- tip here --></li>\n</ul>\n\n–ó–∞–≤–∂–¥–∏ –≤–∏–∑–Ω–∞—á–∞–π—Ç–µ –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–µ—é –¥–ª—è –≤–µ–¥–µ–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É. –ö–æ–ª–∏ –≤–∏ –Ω–∞–≤—á–∞—î—Ç–µ —á–∏ —ñ–ª—é—Å—Ç—Ä—É—î—Ç–µ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É –ª–µ–∫—Å–∏–∫—É, —Ä–µ—á–µ–Ω–Ω—è —á–∏ –≤–ø—Ä–∞–≤–∏, –ø–æ–¥–∞–≤–∞–π—Ç–µ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —É –Ω–∞–≤–µ–¥–µ–Ω–∏—Ö –≤–∏—â–µ HTML-—Ä–æ–∑–¥—ñ–ª–∞—Ö. –ó–∞–æ—Ö–æ—á—É–π—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–∏—Ç–∞–Ω–Ω—è–º–∏ —Ç–∞ –ø—ñ–¥–∫–∞–∑–∫–∞–º–∏ –π–æ–≥–æ –º–æ–≤–æ—é, —â–æ–± –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥—ñ–∞–ª–æ–≥ —ñ –ø—Ä–∞–∫—Ç–∏–∫—É –Ω–æ–≤–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤."
            },
            {
              "role": "user",
              "content": "<!-- —Å—é–¥–∏ –≤—Å—Ç–∞–≤—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ -->"
            }
          ],
          "stream": False,
          "temperature": 0.6,
          "top_p": 0.9
        }
    try:
        async with aiohttp.ClientSession() as session:
            async with session.post("http://localhost:11434/api/chat", json=payload) as resp:
                if resp.status != 200:
                    return web.json_response({"error": "Ollama error"}, status=500)
                result = await resp.json()
                ai_message = result["message"]["content"]
                return web.json_response({"response": ai_message})
    except Exception as e:
        return web.json_response({"error": str(e)}, status=500)
